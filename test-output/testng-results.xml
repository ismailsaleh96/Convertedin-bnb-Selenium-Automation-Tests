<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-16T03:42:41 EET" name="Default suite" finished-at="2023-10-16T03:43:02 EET" duration-ms="21148">
    <groups>
    </groups>
    <test started-at="2023-10-16T03:42:41 EET" name="Default test" finished-at="2023-10-16T03:43:02 EET" duration-ms="21148">
      <class name="Tests.SearchLocationTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:42:33 EET" name="startDriver" finished-at="2023-10-16T03:42:41 EET" duration-ms="8008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="UserSearchForLocation()[pri:1, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:42:41 EET" name="UserSearchForLocation" finished-at="2023-10-16T03:42:47 EET" duration-ms="5646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserSearchForLocation -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:42:47 EET" name="screenshotOnFailure" finished-at="2023-10-16T03:42:47 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserSearchForLocation status=SUCCESS method=SearchLocationTest.UserSearchForLocation()[pri:1, instance:Tests.SearchLocationTest@3bf9ce3e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="filteringStaysResults()[pri:2, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:42:47 EET" name="filteringStaysResults" finished-at="2023-10-16T03:43:00 EET" duration-ms="13235" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: ""
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)
at java.base/java.lang.Integer.parseInt(Integer.java:662)
at java.base/java.lang.Integer.parseInt(Integer.java:770)
at pages.FilterationPage.extractBedroomCount(FilterationPage.java:96)
at pages.FilterationPage.CheckPropertiesBedroomsNumber(FilterationPage.java:86)
at Tests.SearchLocationTest.filteringStaysResults(SearchLocationTest.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filteringStaysResults -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:43:00 EET" name="screenshotOnFailure" finished-at="2023-10-16T03:43:00 EET" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filteringStaysResults status=FAILURE method=SearchLocationTest.filteringStaysResults()[pri:2, instance:Tests.SearchLocationTest@3bf9ce3e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:43:00 EET" name="tearDown" finished-at="2023-10-16T03:43:02 EET" duration-ms="1950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:Tests.SearchLocationTest@3bf9ce3e]" started-at="2023-10-16T03:43:02 EET" name="stopDriver" finished-at="2023-10-16T03:43:02 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- Tests.SearchLocationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
